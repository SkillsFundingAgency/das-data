{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "dbapassword" : {
      "type": "string",
      "metadata": {
        "description": "The the sql db server password."
      }
    }
  },
  "variables": {
    "hostingPlanName": "[concat(parameters('appName'),'hostingplan')]",
    "functionAppName": "[concat(parameters('appName'),'function')]",
    "storageAccountName": "[concat('storage',uniquestring(resourceGroup().id))]",
    "hostname": "[concat(parameters('appName'), '.azurewebsites.net')]",
    "dbservername": "[concat(parameters('appName'), 'dbserver')]",
    "dbname": "[concat(variables('dbservername'),'/',parameters('appName'))]",
    "dbmastername": "[concat(variables('dbservername'),'/master')]",
    "firewallrulesname": "[concat(variables('dbservername'),'/firewall')]",
    "adminlogin": "[concat(parameters('appName'),'admin')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "comments": "not sure about the sku for this",
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[variables('hostingPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "numberOfWorkers": 0
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('functionAppName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('functionAppName')]",
        "hostNames": [
          "[variables('hostname')]"
        ],
        "enabledHostNames": [
          "[variables('hostname')]"
        ],
        "hostNameSslStates": [
          {
            "name": "[variables('hostname')]",
            "sslState": 0,
            "ipBasedSslState": 0
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "latest"
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[variables('dbservername')]",
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[variables('adminlogin')]",
        "administratorLoginPassword": "[parameters('dbapassword')]",
        "version": "12.0"
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "kind": "v12.0,user",
      "name": "[variables('dbname')]",
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "edition": "Standard",
        "status": "Online",
        "serviceLevelObjective": "S3",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": "268435456000",
        "currentServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
        "requestedServiceObjectiveId": "789681b8-ca10-4eb0-bdf2-e0b050601b40",
        "requestedServiceObjectiveName": "S3",
        "sampleName": null,
        "defaultSecondaryLocation": "North Europe",
        "earliestRestoreDate": "2016-12-06T15:07:14.697Z",
        "elasticPoolName": null,
        "containmentState": 2,
        "readScale": "Disabled"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbservername'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "kind": "v12.0,system",
      "name": "[variables('dbmastername')]",
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "edition": "System",
        "status": "Online",
        "serviceLevelObjective": "System2",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": "32212254720",
        "currentServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
        "requestedServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
        "requestedServiceObjectiveName": "System2",
        "sampleName": null,
        "defaultSecondaryLocation": "North Europe",
        "earliestRestoreDate": null,
        "elasticPoolName": null,
        "containmentState": 2,
        "readScale": "Disabled"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbservername'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "kind": "v12.0",
      "name": "[variables('firewallrulesname')]",
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbservername'))]"
      ]
    }
  ]
}