// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Data.DatabaseTests.Features.Views
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LevyDetails")]
    public partial class LevyDetailsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LevyDetails.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LevyDetails", "\tIn order to make sure that i am presenting right data\r\n\tAs a Test Analyst\r\n\tI wa" +
                    "nt to be told the views are working as expected", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reporting LevyDetails View")]
        [NUnit.Framework.CategoryAttribute("ReportingLevyDetails")]
        public virtual void ReportingLevyDetailsView()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reporting LevyDetails View", new string[] {
                        "ReportingLevyDetails"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "DasAccountId",
                        "LevyDeclarationId",
                        "PayeSchemeReference",
                        "LevyDueYearToDate",
                        "LevyAllowanceForYear",
                        "SubmissionDate",
                        "SubmissionId",
                        "PayrollYear",
                        "PayrollMonth",
                        "CreatedDate",
                        "EndOfYearAdjustment",
                        "EndOfYearAdjustmentAmount",
                        "DateCeased",
                        "InactiveFrom",
                        "InactiveTo",
                        "HmrcSubmissionId",
                        "EnglishFraction",
                        "TopupPercentage",
                        "TopupAmount",
                        "LevyDeclaredInMonth",
                        "LevyAvailableInMonth"});
            table1.AddRow(new string[] {
                        "ABC123",
                        "43256",
                        "ABC/12345",
                        "45366.32",
                        "32478.10",
                        "2017-06-18 16:30:35.017",
                        "123",
                        "2017",
                        "2",
                        "2017-06-21 16:30:35.017",
                        "true",
                        "123.45000",
                        "2017-06-20 16:30:35.017",
                        "2017-06-22 16:30:35.017",
                        "2018-06-21 16:30:35.017",
                        "4576",
                        "0.20000",
                        "1.00000",
                        "435.40000",
                        "3245.00000",
                        "495.00000"});
#line 8
testRunner.Given("I have DAS_LevyDeclarations", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "DasAccountId",
                        "Ref",
                        "Name",
                        "AddedDate",
                        "RemovedDate",
                        "UpdateDateTime"});
            table2.AddRow(new string[] {
                        "ABC123",
                        "ABC/12345",
                        "CompanyABC",
                        "2017-06-18 16:30:35.017",
                        "",
                        ""});
#line 11
testRunner.And("I have DAS_Employer_PayeSchemes", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "DasAccountId",
                        "AccountName",
                        "DateRegistered",
                        "OwnerEmail",
                        "UpdateDateTime",
                        "AccountId"});
            table3.AddRow(new string[] {
                        "ABC123",
                        "CompanyABC",
                        "2017-06-20 16:30:35.017",
                        "abc@companyabc.com",
                        "",
                        "65412354"});
#line 14
testRunner.And("I have DAS_Employer_Accounts", ((string)(null)), table3, "And ");
#line 17
testRunner.When("I execute View [Reporting].[LevyDetails]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.Then("I should get atleast 1 row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
